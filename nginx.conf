# Copy from https://github.com/cloudfoundry/staticfile-buildpack/blob/master/conf/nginx.conf, making sure Jekyll urls are served correctly

worker_processes 1;
daemon off;

error_log <%= ENV["APP_ROOT"] %>/nginx/logs/error.log;
events { worker_connections 1024; }

http {
  charset utf-8;
  log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
  access_log <%= ENV["APP_ROOT"] %>/nginx/logs/access.log cloudfoundry;
  default_type application/octet-stream;
  include mime.types;
  sendfile on;

  gzip on;
  gzip_disable "msie6";
  gzip_comp_level 6;
  gzip_min_length 1100;
  gzip_buffers 16 8k;
  gzip_proxied any;
  gunzip on;
  gzip_static always;
  gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;

  tcp_nopush on;
  keepalive_timeout 30;
  port_in_redirect off; # Ensure that redirects don't include the internal container PORT - <%= ENV["PORT"] %>
  server_tokens off;

  server {
    listen <%= ENV["PORT"] %>;
    server_name localhost;
    root <%= ENV["APP_ROOT"] %>/public;

    <% if ENV["FORCE_HTTPS"] %>
      if ($http_x_forwarded_proto != "https") {
        return 301 https://$host$request_uri;
      }
    <% end %>

    index index.html index.htm Default.htm;
    error_page 404 /404.html;

    location = /404.html {
      internal;
    }

    location ~ \.html$ {
      rewrite ^(.*)\.html$ https://$host$1 permanent;
    }

    # Quick and dirty, make sure overview pages get a slash
    location = /apidocs {       rewrite ^/(.*)/$ $1/ permanent;   }
    location = /APM {           rewrite ^/(.*)/$ $1/ permanent;   }
    location = /appstore {      rewrite ^/(.*)/$ $1/ permanent;   }
    location = /ATS {           rewrite ^/(.*)/$ $1/ permanent;   }
    location = /bestpractices { rewrite ^/(.*)/$ $1/ permanent;   }
    location = /community {     rewrite ^/(.*)/$ $1/ permanent;   }
    location = /howto50 {       rewrite ^/(.*)/$ $1/ permanent;   }
    location = /howto6 {        rewrite ^/(.*)/$ $1/ permanent;   }
    location = /mendixcloud {   rewrite ^/(.*)/$ $1/ permanent;   }
    location = /MXSDK {         rewrite ^/(.*)/$ $1/ permanent;   }
    location = /mxsupport {     rewrite ^/(.*)/$ $1/ permanent;   }
    location = /refguide5 {     rewrite ^/(.*)/$ $1/ permanent;   }
    location = /refguide6 {     rewrite ^/(.*)/$ $1/ permanent;   }
    location = /search {        rewrite ^/(.*)/$ $1/ permanent;   }
    location = /tips {          rewrite ^/(.*)/$ $1/ permanent;   }

    location / {
      rewrite ^(/.*)\index(\?.*)?$ $1$2 permanent;
      #rewrite ^(/.*)\.html(\?.*)?$ $1$2 permanent;
      #rewrite ^/(.*)/$ /$1 permanent;
      try_files $uri/index.html $uri.html $uri/ $uri =404;
    }

    location ~ /attachments/ {
      expires 1y;
      try_files $uri/index.html $uri.html $uri/ $uri =404;
    }

    location /json/ {
      expires 1d;
      try_files $uri/index.html $uri.html $uri/ $uri =404;
    }

    location /public/ {
      expires 1M;
      try_files $uri/index.html $uri.html $uri/ $uri =404;
    }
  }
}
